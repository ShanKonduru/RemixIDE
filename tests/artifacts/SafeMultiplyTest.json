{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b506104eb806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806369174f801461003b578063d21d88cf14610045575b600080fd5b610043610063565b005b61004d6100cd565b60405161005a919061014a565b60405180910390f35b60405161006f9061012e565b604051809103906000f08015801561008b573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806004905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc81836101269190610165565b149250505090565b6102b18061020583390190565b610144816101bf565b82525050565b600060208201905061015f600083018461013b565b92915050565b6000610170826101cb565b915061017b836101cb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156101b4576101b36101d5565b5b828202905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfe608060405234801561001057600080fd5b50610291806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806385d17dce14610030575b600080fd5b61004a600480360381019061004591906100e2565b610060565b6040516100579190610131565b60405180910390f35b6000610075828461007d90919063ffffffff16565b905092915050565b60008083148061008d5750600082145b1561009b57600090506100c7565b600082846100a9919061017d565b90508284826100b8919061014c565b146100c257600080fd5b809150505b92915050565b6000813590506100dc81610244565b92915050565b600080604083850312156100f9576100f861023f565b5b6000610107858286016100cd565b9250506020610118858286016100cd565b9150509250929050565b61012b816101d7565b82525050565b60006020820190506101466000830184610122565b92915050565b6000610157826101d7565b9150610162836101d7565b92508261017257610171610210565b5b828204905092915050565b6000610188826101d7565b9150610193836101d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156101cc576101cb6101e1565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b61024d816101d7565b811461025857600080fd5b5056fea26469706673582212209835a495659a2386cac21aed601c532d9516c176cbad6b68dfec5b6fd9c708de64736f6c63430008070033a26469706673582212209e3b9061a86a3d158a947eff705206f988bea1924dfb7082df74dadae8e71d3464736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4EB DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69174F80 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD21D88CF EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP1 PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP2 DUP4 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x165 JUMP JUMPDEST EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2B1 DUP1 PUSH2 0x205 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x144 DUP2 PUSH2 0x1BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170 DUP3 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH2 0x17B DUP4 PUSH2 0x1CB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B4 JUMPI PUSH2 0x1B3 PUSH2 0x1D5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85D17DCE EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x131 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x75 DUP3 DUP5 PUSH2 0x7D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ DUP1 PUSH2 0x8D JUMPI POP PUSH1 0x0 DUP3 EQ JUMPDEST ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x17D JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x14C JUMP JUMPDEST EQ PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDC DUP2 PUSH2 0x244 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF9 JUMPI PUSH2 0xF8 PUSH2 0x23F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x107 DUP6 DUP3 DUP7 ADD PUSH2 0xCD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x118 DUP6 DUP3 DUP7 ADD PUSH2 0xCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x146 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157 DUP3 PUSH2 0x1D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x162 DUP4 PUSH2 0x1D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x172 JUMPI PUSH2 0x171 PUSH2 0x210 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188 DUP3 PUSH2 0x1D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x193 DUP4 PUSH2 0x1D7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x1E1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24D DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 CALLDATALOAD LOG4 SWAP6 PUSH6 0x9A2386CAC21A 0xED PUSH1 0x1C MSTORE8 0x2D SWAP6 AND 0xC1 PUSH23 0xCBAD6B68DFEC5B6FD9C708DE64736F6C63430008070033 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 EXTCODESIZE SWAP1 PUSH2 0xA86A RETURNDATASIZE ISZERO DUP11 SWAP5 PUSH31 0xFF705206F988BEA1924DFB7082DF74DADAE8E71D3464736F6C634300080700 CALLER ",
			"sourceMap": "232:390:3:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@BeforeAll_831": {
					"entryPoint": 99,
					"id": 831,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@unsafeMultiplicationShouldOverflow_860": {
					"entryPoint": 205,
					"id": 860,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"abi_encode_t_bool_to_t_bool_fromStack": {
					"entryPoint": 315,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
					"entryPoint": 330,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_mul_t_uint256": {
					"entryPoint": 357,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_bool": {
					"entryPoint": 447,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 459,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"panic_error_0x11": {
					"entryPoint": 469,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1054:4",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "66:50:4",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "83:3:4"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "103:5:4"
															}
														],
														"functionName": {
															"name": "cleanup_t_bool",
															"nodeType": "YulIdentifier",
															"src": "88:14:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "88:21:4"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "76:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "76:34:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "76:34:4"
										}
									]
								},
								"name": "abi_encode_t_bool_to_t_bool_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "54:5:4",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "61:3:4",
										"type": ""
									}
								],
								"src": "7:109:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "214:118:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "224:26:4",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "236:9:4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "247:2:4",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "232:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "232:18:4"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "224:4:4"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "298:6:4"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "311:9:4"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "322:1:4",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "307:3:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "307:17:4"
													}
												],
												"functionName": {
													"name": "abi_encode_t_bool_to_t_bool_fromStack",
													"nodeType": "YulIdentifier",
													"src": "260:37:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "260:65:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "260:65:4"
										}
									]
								},
								"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "186:9:4",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "198:6:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "209:4:4",
										"type": ""
									}
								],
								"src": "122:210:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "386:300:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "396:25:4",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "419:1:4"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "401:17:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "401:20:4"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "396:1:4"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "430:25:4",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "453:1:4"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "435:17:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "435:20:4"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "430:1:4"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "628:22:4",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "630:16:4"
															},
															"nodeType": "YulFunctionCall",
															"src": "630:18:4"
														},
														"nodeType": "YulExpressionStatement",
														"src": "630:18:4"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "540:1:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "533:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "533:9:4"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "526:6:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "526:17:4"
													},
													{
														"arguments": [
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "548:1:4"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "555:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "623:1:4"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "551:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "551:74:4"
															}
														],
														"functionName": {
															"name": "gt",
															"nodeType": "YulIdentifier",
															"src": "545:2:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "545:81:4"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "522:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "522:105:4"
											},
											"nodeType": "YulIf",
											"src": "519:131:4"
										},
										{
											"nodeType": "YulAssignment",
											"src": "660:20:4",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "675:1:4"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "678:1:4"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "671:3:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "671:9:4"
											},
											"variableNames": [
												{
													"name": "product",
													"nodeType": "YulIdentifier",
													"src": "660:7:4"
												}
											]
										}
									]
								},
								"name": "checked_mul_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "369:1:4",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "372:1:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "product",
										"nodeType": "YulTypedName",
										"src": "378:7:4",
										"type": ""
									}
								],
								"src": "338:348:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "734:48:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "744:32:4",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "769:5:4"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "762:6:4"
														},
														"nodeType": "YulFunctionCall",
														"src": "762:13:4"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "755:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "755:21:4"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "744:7:4"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "716:5:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "726:7:4",
										"type": ""
									}
								],
								"src": "692:90:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "833:32:4",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "843:16:4",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "854:5:4"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "843:7:4"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "815:5:4",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "825:7:4",
										"type": ""
									}
								],
								"src": "788:77:4"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "899:152:4",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "916:1:4",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "919:77:4",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "909:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "909:88:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "909:88:4"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1013:1:4",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1016:4:4",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1006:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1006:15:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1006:15:4"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1037:1:4",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1040:4:4",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "1030:6:4"
												},
												"nodeType": "YulFunctionCall",
												"src": "1030:15:4"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1030:15:4"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "871:180:4"
							}
						]
					},
					"contents": "{\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
					"id": 4,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806369174f801461003b578063d21d88cf14610045575b600080fd5b610043610063565b005b61004d6100cd565b60405161005a919061014a565b60405180910390f35b60405161006f9061012e565b604051809103906000f08015801561008b573d6000803e3d6000fd5b506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806004905060007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc81836101269190610165565b149250505090565b6102b18061020583390190565b610144816101bf565b82525050565b600060208201905061015f600083018461013b565b92915050565b6000610170826101cb565b915061017b836101cb565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156101b4576101b36101d5565b5b828202905092915050565b60008115159050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfe608060405234801561001057600080fd5b50610291806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806385d17dce14610030575b600080fd5b61004a600480360381019061004591906100e2565b610060565b6040516100579190610131565b60405180910390f35b6000610075828461007d90919063ffffffff16565b905092915050565b60008083148061008d5750600082145b1561009b57600090506100c7565b600082846100a9919061017d565b90508284826100b8919061014c565b146100c257600080fd5b809150505b92915050565b6000813590506100dc81610244565b92915050565b600080604083850312156100f9576100f861023f565b5b6000610107858286016100cd565b9250506020610118858286016100cd565b9150509250929050565b61012b816101d7565b82525050565b60006020820190506101466000830184610122565b92915050565b6000610157826101d7565b9150610162836101d7565b92508261017257610171610210565b5b828204905092915050565b6000610188826101d7565b9150610193836101d7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156101cc576101cb6101e1565b5b828202905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b61024d816101d7565b811461025857600080fd5b5056fea26469706673582212209835a495659a2386cac21aed601c532d9516c176cbad6b68dfec5b6fd9c708de64736f6c63430008070033a26469706673582212209e3b9061a86a3d158a947eff705206f988bea1924dfb7082df74dadae8e71d3464736f6c63430008070033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x69174F80 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xD21D88CF EQ PUSH2 0x45 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x63 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0x14A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6F SWAP1 PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 SWAP1 POP PUSH1 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP2 DUP4 PUSH2 0x126 SWAP2 SWAP1 PUSH2 0x165 JUMP JUMPDEST EQ SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x2B1 DUP1 PUSH2 0x205 DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH2 0x144 DUP2 PUSH2 0x1BF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x170 DUP3 PUSH2 0x1CB JUMP JUMPDEST SWAP2 POP PUSH2 0x17B DUP4 PUSH2 0x1CB JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1B4 JUMPI PUSH2 0x1B3 PUSH2 0x1D5 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x291 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x85D17DCE EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x131 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x75 DUP3 DUP5 PUSH2 0x7D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ DUP1 PUSH2 0x8D JUMPI POP PUSH1 0x0 DUP3 EQ JUMPDEST ISZERO PUSH2 0x9B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x17D JUMP JUMPDEST SWAP1 POP DUP3 DUP5 DUP3 PUSH2 0xB8 SWAP2 SWAP1 PUSH2 0x14C JUMP JUMPDEST EQ PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDC DUP2 PUSH2 0x244 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF9 JUMPI PUSH2 0xF8 PUSH2 0x23F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x107 DUP6 DUP3 DUP7 ADD PUSH2 0xCD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x118 DUP6 DUP3 DUP7 ADD PUSH2 0xCD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12B DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x146 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x122 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x157 DUP3 PUSH2 0x1D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x162 DUP4 PUSH2 0x1D7 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x172 JUMPI PUSH2 0x171 PUSH2 0x210 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x188 DUP3 PUSH2 0x1D7 JUMP JUMPDEST SWAP2 POP PUSH2 0x193 DUP4 PUSH2 0x1D7 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1CC JUMPI PUSH2 0x1CB PUSH2 0x1E1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x24D DUP2 PUSH2 0x1D7 JUMP JUMPDEST DUP2 EQ PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 CALLDATALOAD LOG4 SWAP6 PUSH6 0x9A2386CAC21A 0xED PUSH1 0x1C MSTORE8 0x2D SWAP6 AND 0xC1 PUSH23 0xCBAD6B68DFEC5B6FD9C708DE64736F6C63430008070033 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 EXTCODESIZE SWAP1 PUSH2 0xA86A RETURNDATASIZE ISZERO DUP11 SWAP5 PUSH31 0xFF705206F988BEA1924DFB7082DF74DADAE8E71D3464736F6C634300080700 CALLER ",
			"sourceMap": "232:390:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;309:90;;;:::i;:::-;;407:210;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;309:90;368:23;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;348:17;;:43;;;;;;;;;;;;;;;;;;309:90::o;407:210::-;469:4;485:17;505:1;485:21;;517:17;537:12;517:32;;598:10;585:9;573;:21;;;;:::i;:::-;:35;564:45;;;;407:210;:::o;-1:-1:-1:-;;;;;;;;:::o;7:109:4:-;88:21;103:5;88:21;:::i;:::-;83:3;76:34;7:109;;:::o;122:210::-;209:4;247:2;236:9;232:18;224:26;;260:65;322:1;311:9;307:17;298:6;260:65;:::i;:::-;122:210;;;;:::o;338:348::-;378:7;401:20;419:1;401:20;:::i;:::-;396:25;;435:20;453:1;435:20;:::i;:::-;430:25;;623:1;555:66;551:74;548:1;545:81;540:1;533:9;526:17;522:105;519:131;;;630:18;;:::i;:::-;519:131;678:1;675;671:9;660:20;;338:348;;;;:::o;692:90::-;726:7;769:5;762:13;755:21;744:32;;692:90;;;:::o;788:77::-;825:7;854:5;843:16;;788:77;;;:::o;871:180::-;919:77;916:1;909:88;1016:4;1013:1;1006:15;1040:4;1037:1;1030:15"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "251800",
				"executionCost": "294",
				"totalCost": "252094"
			},
			"external": {
				"BeforeAll()": "infinite",
				"unsafeMultiplicationShouldOverflow()": "infinite"
			}
		},
		"methodIdentifiers": {
			"BeforeAll()": "69174f80",
			"unsafeMultiplicationShouldOverflow()": "d21d88cf"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "BeforeAll",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "unsafeMultiplicationShouldOverflow",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}